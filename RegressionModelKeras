import numpy as np
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
# Generate some random data for regression
np.random.seed(0)
X = np.random.rand(100, 1) # Features
y = 2 * X.squeeze() + 1 + np.random.randn(100) * 0.1 # Labels
# Define the model
model = keras.Sequential([
 layers.Dense(10, activation='relu', input_shape=(1,)),
 layers.Dense(1) # Output layer with one neuron for regression
])
# Compile the model
model.compile(optimizer='adam', loss='mse') # Using mean squared error loss for regression
# Train the model
model.fit(X, y, epochs=100, batch_size=32, verbose=0) # Training for 100 epochs
# Make predictions
predictions = model.predict(X)
# Print some predictions and true labels for comparison
for i in range(5):
 print("Predicted:", predictions[i][0], "\tTrue:", y[i])
